<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ZTAppFrameword.Template.Control">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ZTAppFrameword.Template;component/Resources/ConverterStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ZTCheckBoxStyle" TargetType="{x:Type local:ZTCheckBox}">
        <Style.Resources>
            <!--  Standard样式  -->
            <ControlTemplate x:Key="Standard" TargetType="{x:Type local:ZTCheckBox}">
                <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding Path=(local:ZTCheckBox.HeaderWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource GridLengthConverter}}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        x:Name="ContentHeader"
                        VerticalAlignment="Center"
                        Content="{Binding Path=(local:ZTCheckBox.Header), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                    <Grid
                        Grid.Column="1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid
                            x:Name="Grid"
                            Width="{Binding Path=(local:ZTCheckBox.BoxWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                            Height="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                            Opacity="0.8">
                            <Border
                                x:Name="Rect"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness,
                                                                  Converter={StaticResource ThicknessToDoubleConverter}}"
                                CornerRadius="{Binding Path=(local:ZTCheckBox.CornerRadius), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                            <Path
                                x:Name="Path"
                                Width="{Binding Path=(local:ZTCheckBox.BoxWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Height="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Stroke="{Binding Path=(local:ZTCheckBox.GlyphBrush), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                StrokeDashCap="Round"
                                StrokeThickness="1.5">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource CheckBoxGlyphPathConverter}">
                                        <Binding ElementName="Path" Path="ActualWidth" />
                                        <Binding ElementName="Path" Path="ActualHeight" />
                                    </MultiBinding>
                                </Path.Data>
                            </Path>
                            <Border
                                x:Name="RectNull"
                                Background="{Binding Path=(local:ZTCheckBox.NullGlyphBrush), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                CornerRadius="{Binding Path=(local:ZTCheckBox.CornerRadius), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                RenderTransformOrigin="0.5,0.5"
                                Visibility="Collapsed">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                        <ContentPresenter
                            x:Name="Presenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Content" />

                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter TargetName="RectNull" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Path" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                            <Condition Binding="{Binding Path=(local:ZTCheckBox.CheckedContent), Converter={StaticResource IsNotNullConverter}, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="Presenter" Property="Content" Value="{Binding Path=(local:ZTCheckBox.CheckedContent), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                    </MultiDataTrigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="Grid" Property="Opacity" Value="1" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="Rect" Property="Background" Value="{Binding Path=(local:ZTCheckBox.CheckedBackground), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                        <Setter TargetName="Path" Property="Stroke" Value="{Binding Path=(local:ZTCheckBox.CheckedGlyphBrush), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="Switch" TargetType="{x:Type local:ZTCheckBox}">
                <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding Path=(local:ZTCheckBox.HeaderWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource GridLengthConverter}}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        x:Name="ContentHeader"
                        VerticalAlignment="Center"
                        Content="{Binding Path=(local:ZTCheckBox.Header), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                    <Grid
                        Grid.Column="1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid
                            x:Name="Grid"
                            Width="{Binding Path=(local:ZTCheckBox.BoxWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                            Height="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}">
                            <Rectangle
                                x:Name="RectChecked"
                                Width="{Binding Path=(local:ZTCheckBox.BoxWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Height="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Fill="{Binding Path=(local:ZTCheckBox.CheckedBackground), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                RadiusX="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource HalfConverter}, Mode=OneWay}"
                                RadiusY="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource HalfConverter}, Mode=OneWay}"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{TemplateBinding BorderThickness,
                                                                  Converter={StaticResource ThicknessToDoubleConverter}}" />
                            <Rectangle
                                x:Name="Rect"
                                Width="{Binding Path=(local:ZTCheckBox.BoxWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Height="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Fill="{TemplateBinding Background}"
                                RadiusX="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource HalfConverter}, Mode=OneWay}"
                                RadiusY="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource HalfConverter}, Mode=OneWay}"
                                RenderTransformOrigin="0.5,0.5"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{TemplateBinding BorderThickness,
                                                                  Converter={StaticResource ThicknessToDoubleConverter}}">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform x:Name="scale" ScaleX="1" ScaleY="1" />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <Rectangle
                                x:Name="RectToggle"
                                Width="{Binding Path=(local:ZTCheckBox.BoxHeight), Converter={StaticResource Minus2Converter}, RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Height="{Binding Path=(local:ZTCheckBox.BoxHeight), Converter={StaticResource Minus2Converter}, RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Fill="{Binding Path=(local:ZTCheckBox.GlyphBrush), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                RadiusX="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource HalfConverter}, Mode=OneWay}"
                                RadiusY="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource HalfConverter}, Mode=OneWay}"
                                StrokeThickness="0">
                                <Rectangle.Margin>
                                    <MultiBinding Converter="{StaticResource SwitchToggleMarginConverter}">
                                        <Binding ElementName="Rect" Path="ActualWidth" />
                                        <Binding ElementName="Rect" Path="ActualHeight" />
                                    </MultiBinding>
                                </Rectangle.Margin>
                                <Rectangle.Effect>
                                    <DropShadowEffect
                                        x:Name="effect"
                                        BlurRadius="3"
                                        Direction="275"
                                        Opacity="0.4"
                                        ShadowDepth="1"
                                        Color="DimGray" />
                                </Rectangle.Effect>
                            </Rectangle>
                        </Grid>
                        <ContentPresenter
                            x:Name="Presenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Content" />
                    </Grid>
                </Grid>

                <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                            <Condition Binding="{Binding Path=(local:ZTCheckBox.CheckedContent), Converter={StaticResource IsNotNullConverter}, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="Presenter" Property="Content" Value="{Binding Path=(local:ZTCheckBox.CheckedContent), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
                    </MultiDataTrigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation
                                        Storyboard.TargetName="RectToggle"
                                        Storyboard.TargetProperty="Margin"
                                        To="0,0,0,0"
                                        Duration="0:0:0.3">
                                        <ThicknessAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                    <DoubleAnimation
                                        Storyboard.TargetName="scale"
                                        Storyboard.TargetProperty="ScaleX"
                                        To="0"
                                        Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation
                                        Storyboard.TargetName="scale"
                                        Storyboard.TargetProperty="ScaleY"
                                        To="0"
                                        Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation
                                        Storyboard.TargetName="RectToggle"
                                        Storyboard.TargetProperty="Margin"
                                        Duration="0:0:0.3">
                                        <ThicknessAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                    <DoubleAnimation
                                        Storyboard.TargetName="scale"
                                        Storyboard.TargetProperty="ScaleX"
                                        Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation
                                        Storyboard.TargetName="scale"
                                        Storyboard.TargetProperty="ScaleY"
                                        Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>

                                </Storyboard>
                            </BeginStoryboard>

                        </Trigger.ExitActions>
                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="Switch2" TargetType="{x:Type local:ZTCheckBox}">
                <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding Path=(local:ZTCheckBox.HeaderWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource GridLengthConverter}}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        x:Name="ContentHeader"
                        VerticalAlignment="Center"
                        Content="{Binding Path=(local:ZTCheckBox.Header), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                    <Grid
                        Grid.Column="1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid
                            x:Name="Grid"
                            Width="{Binding Path=(local:ZTCheckBox.BoxWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                            Height="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}">
                            <Border
                                x:Name="RectChecked"
                                Width="{Binding Path=(local:ZTCheckBox.BoxWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Height="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Background="{Binding Path=(local:ZTCheckBox.CheckedBackground), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(local:ZTCheckBox.CornerRadius), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                            <Border
                                x:Name="Rect"
                                Width="{Binding Path=(local:ZTCheckBox.BoxWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Height="{Binding Path=(local:ZTCheckBox.BoxHeight), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(local:ZTCheckBox.CornerRadius), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="scale" ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                            </Border>
                            <Rectangle
                                Width="3"
                                Margin="5,5,0,5"
                                HorizontalAlignment="Left"
                                Fill="White" />
                            <Border
                                x:Name="RectToggle"
                                Width="{Binding Path=(local:ZTCheckBox.BoxHeight), Converter={StaticResource Minus2Converter}, RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                Height="{Binding Path=(local:ZTCheckBox.BoxHeight), Converter={StaticResource Minus2Converter}, RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Background="{Binding Path=(local:ZTCheckBox.GlyphBrush), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                                CornerRadius="{Binding Path=(local:ZTCheckBox.CornerRadius), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}">
                                <Border.Margin>
                                    <MultiBinding Converter="{StaticResource SwitchToggleMarginConverter}">
                                        <Binding ElementName="Rect" Path="ActualWidth" />
                                        <Binding ElementName="Rect" Path="ActualHeight" />
                                    </MultiBinding>
                                </Border.Margin>
                                <Border.Effect>
                                    <DropShadowEffect
                                        x:Name="effect"
                                        BlurRadius="3"
                                        Direction="275"
                                        Opacity="0.4"
                                        ShadowDepth="1"
                                        Color="DimGray" />
                                </Border.Effect>
                            </Border>
                        </Grid>
                        <ContentPresenter
                            x:Name="Presenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Content" />
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                            <Condition Binding="{Binding Path=(local:ZTCheckBox.CheckedContent), Converter={StaticResource IsNotNullConverter}, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="Presenter" Property="Content" Value="{Binding Path=(local:ZTCheckBox.CheckedContent), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                    </MultiDataTrigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation
                                        Storyboard.TargetName="RectToggle"
                                        Storyboard.TargetProperty="Margin"
                                        To="0,0,0,0"
                                        Duration="0:0:0.3">
                                        <ThicknessAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                    <DoubleAnimation
                                        Storyboard.TargetName="scale"
                                        Storyboard.TargetProperty="ScaleX"
                                        To="0"
                                        Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation
                                        Storyboard.TargetName="scale"
                                        Storyboard.TargetProperty="ScaleY"
                                        To="0"
                                        Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation
                                        Storyboard.TargetName="RectToggle"
                                        Storyboard.TargetProperty="Margin"
                                        Duration="0:0:0.3">
                                        <ThicknessAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                    <DoubleAnimation
                                        Storyboard.TargetName="scale"
                                        Storyboard.TargetProperty="ScaleX"
                                        Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation
                                        Storyboard.TargetName="scale"
                                        Storyboard.TargetProperty="ScaleY"
                                        Duration="0:0:0.3">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="Button" TargetType="{x:Type local:ZTCheckBox}">

                <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding Path=(local:ZTCheckBox.HeaderWidth), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Converter={StaticResource GridLengthConverter}}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        x:Name="ContentHeader"
                        VerticalAlignment="Center"
                        Content="{Binding Path=(local:ZTCheckBox.Header), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                    <Grid x:Name="GrdMain" Grid.Column="1">
                        <Border
                            x:Name="BdrBack"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(local:ZTCheckBox.CornerRadius), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                        <Border
                            x:Name="BdrHover"
                            Background="{Binding Path=(local:ZTCheckBox.CheckedBackground), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(local:ZTCheckBox.CornerRadius), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                            Opacity="0" />
                        <Border
                            x:Name="BdrChecked"
                            Background="{Binding Path=(local:ZTCheckBox.CheckedBackground), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(local:ZTCheckBox.CornerRadius), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                            <Condition Binding="{Binding Path=(local:ZTCheckBox.CheckedContent), Converter={StaticResource IsNotNullConverter}, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="Content" Property="Content" Value="{Binding Path=(local:ZTCheckBox.CheckedContent), RelativeSource={RelativeSource AncestorType=local:ZTCheckBox}, Mode=OneWay}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="BdrHover"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>

                        </MultiDataTrigger.EnterActions>
                        <MultiDataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="BdrHover"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </MultiDataTrigger.ExitActions>
                    </MultiDataTrigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="Content" Property="TextBlock.Foreground" Value="Black" />
                        <Setter TargetName="BdrChecked" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="Content" Property="TextBlock.Foreground" Value="#409EFF" />

                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#3E3E3E" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="GlyphBrush" Value="#FFFFFF" />
        <Setter Property="CheckedGlyphBrush" Value="#FFFFFF" />
        <Setter Property="BoxHeight" Value="16" />
        <Setter Property="BoxWidth" Value="16" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="CheckedBackground" Value="#3E3E3E" />
        <Setter Property="NullGlyphBrush" Value="DimGray" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(local:ZTCheckBox.CheckBoxStyle), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Standard">
                <Setter Property="Template" Value="{DynamicResource Standard}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(local:ZTCheckBox.CheckBoxStyle), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Switch">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CheckedBackground" Value="#888888" />
                <Setter Property="BoxHeight" Value="22" />
                <Setter Property="BoxWidth" Value="34" />
                <Setter Property="Template" Value="{DynamicResource Switch}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(local:ZTCheckBox.CheckBoxStyle), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Switch2">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CheckedBackground" Value="#888888" />
                <Setter Property="BoxHeight" Value="22" />
                <Setter Property="BoxWidth" Value="44" />
                <Setter Property="Template" Value="{DynamicResource Switch2}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(local:ZTCheckBox.CheckBoxStyle), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Button">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="10,0" />
                <Setter Property="Template" Value="{DynamicResource Button}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource ZTCheckBoxStyle}" TargetType="{x:Type local:ZTCheckBox}" />
</ResourceDictionary>