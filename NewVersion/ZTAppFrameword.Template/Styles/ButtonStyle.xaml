<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ZTAppFrameword.Template.Control">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ZTAppFrameword.Template;component/Resources/ImageStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ZTButtonStyle" TargetType="{x:Type local:ZTButton}">
        <Style.Resources>
            <ControlTemplate x:Key="ZTButtonControlTemplate" TargetType="{x:Type local:ZTButton}">
                <Border
                    x:Name="bg"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                    <Grid
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Path
                            x:Name="icon"
                            Width="15"
                            Height="15"
                            Margin="0,0,5,0"
                            Data="{DynamicResource loading}"
                            Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill"
                            Visibility="Collapsed">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <ContentControl
                            x:Name="PART_LoadingContent"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding LoadingContent}"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="PART_Content"
                            Grid.Column="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="bg" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HoverBackground}" />
                        <Setter TargetName="bg" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HoverBorderBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">

                        <Setter TargetName="bg" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}" />
                        <Setter TargetName="bg" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="bg" Property="Opacity" Value="0.4" />
                    </Trigger>
                    <Trigger Property="IsLoading" Value="true">
                        <Setter Property="IsEnabled" Value="False" />
                        <Setter TargetName="PART_LoadingContent" Property="Visibility" Value="Visible" />
                        <Setter TargetName="PART_LoadingContent" Property="Panel.ZIndex" Value="1" />
                        <Setter TargetName="PART_Content" Property="Opacity" Value="0" />
                        <Setter TargetName="PART_Content" Property="IsHitTestVisible" Value="False" />
                        <Setter TargetName="PART_Content" Property="Width" Value="0" />
                        <Setter TargetName="icon" Property="Visibility" Value="Visible" />
                        <Setter TargetName="bg" Property="Opacity" Value="0.6" />
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation
                                        Storyboard.TargetName="icon"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                        To="360"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="icon"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                        To="0"
                                        Duration="0:0:0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="ZTButtonControlLineTemplate" TargetType="{x:Type local:ZTButton}">
                <Border
                    x:Name="bg"
                    Background="Transparent"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                    <Grid
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Path
                            x:Name="icon"
                            Width="15"
                            Height="15"
                            Margin="0,0,5,0"
                            Data="{DynamicResource loading}"
                            Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill"
                            Visibility="Collapsed">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <ContentControl
                            x:Name="PART_LoadingContent"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding LoadingContent}"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="PART_Content"
                            Grid.Column="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(local:ZTButton.IsMouseOver), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="True" />
                            <Condition Binding="{Binding Path=(local:ZTButton.IsAnimantion), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.EnterActions>

                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="FontSize"
                                        To="24"
                                        Duration="0:0:0.200" />
                                </Storyboard>
                            </BeginStoryboard>

                        </MultiDataTrigger.EnterActions>
                        <MultiDataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="FontSize"
                                        To="16"
                                        Duration="0:0:0.200" />
                                </Storyboard>
                            </BeginStoryboard>
                        </MultiDataTrigger.ExitActions>
                    </MultiDataTrigger>



                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="bg" Property="BorderThickness" Value="1" />
                        <Setter TargetName="bg" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="bg" Property="Opacity" Value="0.4" />
                    </Trigger>
                    <Trigger Property="IsLoading" Value="true">
                        <Setter Property="IsEnabled" Value="False" />
                        <Setter TargetName="PART_LoadingContent" Property="Visibility" Value="Visible" />
                        <Setter TargetName="PART_LoadingContent" Property="Panel.ZIndex" Value="1" />
                        <Setter TargetName="PART_Content" Property="Opacity" Value="0" />
                        <Setter TargetName="PART_Content" Property="IsHitTestVisible" Value="False" />
                        <Setter TargetName="PART_Content" Property="Width" Value="0" />
                        <Setter TargetName="icon" Property="Visibility" Value="Visible" />
                        <Setter TargetName="bg" Property="Opacity" Value="0.6" />
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation
                                        Storyboard.TargetName="icon"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                        To="360"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="icon"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                        To="0"
                                        Duration="0:0:0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="Width" Value="94" />
        <Setter Property="Height" Value="38" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Type" Value="Primary" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(local:ZTButton.ButtonType), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Standard">
                <Setter Property="Template" Value="{DynamicResource ZTButtonControlTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(local:ZTButton.ButtonType), RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Link">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Template" Value="{DynamicResource ZTButtonControlLineTemplate}" />
            </DataTrigger>
            <Trigger Property="Type" Value="Primary">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="HoverBackground" Value="White" />
                <Setter Property="HoverBorderBrush" Value="Green" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="Type" Value="Default">
                <Setter Property="Background" Value="Green" />
                <Setter Property="HoverBackground" Value="#001d85" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="Type" Value="Normal">
                <Setter Property="Background" Value="Blue" />
                <Setter Property="HoverBackground" Value="LightBlue" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
            <Trigger Property="Type" Value="Warm">
                <Setter Property="Background" Value="Orange" />
                <Setter Property="HoverBackground" Value="#323232" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderThickness" Value="0" />

            </Trigger>
            <Trigger Property="Type" Value="Danger">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HoverBackground" Value="LightBlue" />
            </Trigger>
        </Style.Triggers>

    </Style>
    <Style BasedOn="{StaticResource ZTButtonStyle}" TargetType="{x:Type local:ZTButton}" />
</ResourceDictionary>